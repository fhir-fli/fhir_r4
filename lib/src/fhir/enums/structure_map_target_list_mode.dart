// ignore_for_file: constant_identifier_names, lines_longer_than_80_chars, unused_element, flutter_style_todos

import 'package:fhir_r4/fhir_r4.dart';

/// If field is a list, how to manage the production.
enum StructureMapTargetListMode {
  /// Display: First
  /// Definition: when the target list is being assembled, the items for this rule go first. If more than one rule defines a first item (for a given instance of mapping) then this is an error.
  first('first'),

  /// Display: Share
  /// Definition: the target instance is shared with the target instances generated by another rule (up to the first common n items, then create new ones).
  share('share'),

  /// Display: Last
  /// Definition: when the target list is being assembled, the items for this rule go last. If more than one rule defines a last item (for a given instance of mapping) then this is an error.
  last('last'),

  /// Display: Collate
  /// Definition: re-use the first item in the list, and keep adding content to it.
  collate('collate'),

  /// For instances where an Element is present but not value

  elementOnly(''),
  ;

  const StructureMapTargetListMode(this.fhirCode, [this.element]);

  /// The String value of this enum
  final String fhirCode;

  /// The Element value of this enum
  final Element? element;

  /// Serializes the instance to JSON with standardized keys
  Map<String, dynamic> toJson() => {
        'value': fhirCode.isEmpty ? null : fhirCode,
        if (element != null) '_value': element!.toJson(),
      };

  /// Converts a list of JSON values to a list of [StructureMapTargetListMode] instances.
  static StructureMapTargetListMode fromJson(
    Map<String, dynamic> json,
  ) {
    final value = json['value'] as String?;
    final elementJson = json['_value'] as Map<String, dynamic>?;
    final element = elementJson != null ? Element.fromJson(elementJson) : null;
    if (value == null && element != null) {
      return StructureMapTargetListMode.elementOnly.withElement(
        element,
      );
    }
    return StructureMapTargetListMode.values.firstWhere(
      (e) => e.fhirCode == value,
    );
  }

  /// Returns the enum value with an element
  StructureMapTargetListMode withElement(Element? newElement) {
    return StructureMapTargetListMode.fromJson({
      'value': fhirCode,
      '_value': newElement?.toJson(),
    });
  }
}
