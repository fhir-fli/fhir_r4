import 'package:json_annotation/json_annotation.dart';

/// If field is a list, how to manage the production.
enum StructureMapTargetListMode {
  /// Display: First
  /// Definition: when the target list is being assembled, the items for this rule go first. If more than one rule defines a first item (for a given instance of mapping) then this is an error.
  @JsonValue('first')
  first,

  /// Display: Share
  /// Definition: the target instance is shared with the target instances generated by another rule (up to the first common n items, then create new ones).
  @JsonValue('share')
  share,

  /// Display: Last
  /// Definition: when the target list is being assembled, the items for this rule go last. If more than one rule defines a last item (for a given instance of mapping) then this is an error.
  @JsonValue('last')
  last,

  /// Display: Collate
  /// Definition: re-use the first item in the list, and keep adding content to it.
  @JsonValue('collate')
  collate,
  ;

  @override
  String toString() {
    switch (this) {
      case first:
        return 'first';
      case share:
        return 'share';
      case last:
        return 'last';
      case collate:
        return 'collate';
    }
  }

  String toJson() => toString();
  StructureMapTargetListMode fromString(String str) {
    switch (str) {
      case 'first':
        return StructureMapTargetListMode.first;
      case 'share':
        return StructureMapTargetListMode.share;
      case 'last':
        return StructureMapTargetListMode.last;
      case 'collate':
        return StructureMapTargetListMode.collate;
      default:
        throw ArgumentError('Unknown enum value: $str');
    }
  }

  StructureMapTargetListMode fromJson(dynamic jsonValue) {
    if (jsonValue is String) {
      return fromString(jsonValue);
    } else {
      throw ArgumentError('Unknown enum value: $jsonValue');
    }
  }
}
