import 'package:json_annotation/json_annotation.dart';

/// A code that indicates how the page is generated.
enum GuidePageGeneration {
  /// Display: HTML
  /// Definition: Page is proper xhtml with no templating.  Will be brought across unchanged for standard post-processing.
  @JsonValue('html')
  html,

  /// Display: Markdown
  /// Definition: Page is markdown with templating.  Will use the template to create a file that imports the markdown file prior to post-processing.
  @JsonValue('markdown')
  markdown,

  /// Display: XML
  /// Definition: Page is xml with templating.  Will use the template to create a file that imports the source file and run the nominated XSLT transform (see parameters) if present prior to post-processing.
  @JsonValue('xml')
  xml,

  /// Display: Generated
  /// Definition: Page will be generated by the publication process - no source to bring across.
  @JsonValue('generated')
  generated,
  ;

  @override
  String toString() {
    switch (this) {
      case html:
        return 'html';
      case markdown:
        return 'markdown';
      case xml:
        return 'xml';
      case generated:
        return 'generated';
    }
  }

  String toJson() => toString();
  GuidePageGeneration fromString(String str) {
    switch (str) {
      case 'html':
        return GuidePageGeneration.html;
      case 'markdown':
        return GuidePageGeneration.markdown;
      case 'xml':
        return GuidePageGeneration.xml;
      case 'generated':
        return GuidePageGeneration.generated;
      default:
        throw ArgumentError('Unknown enum value: $str');
    }
  }

  GuidePageGeneration fromJson(dynamic jsonValue) {
    if (jsonValue is String) {
      return fromString(jsonValue);
    } else {
      throw ArgumentError('Unknown enum value: $jsonValue');
    }
  }
}
