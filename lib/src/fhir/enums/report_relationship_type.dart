import 'package:fhir_r4/fhir_r4.dart';

/// The type of relationship between reports.
enum ReportRelationshipType {
  /// Display: Replaces
  /// Definition: This document replaces or supersedes the target document.
  replaces('replaces'),

  /// Display: Amends
  /// Definition: This document notes corrections or changes to replace or supersede parts of the target document.
  amends('amends'),

  /// Display: Appends
  /// Definition: This document adds additional information to the target document.
  appends('appends'),

  /// Display: Transforms
  /// Definition: This document was generated by transforming the target document (eg format or language conversion).
  transforms('transforms'),

  /// Display: Replaced With
  /// Definition: This document was.
  replacedWith('replacedWith'),

  /// Display: Amended With
  /// Definition: This document was.
  amendedWith('amendedWith'),

  /// Display: Appended With
  /// Definition: This document was.
  appendedWith('appendedWith'),

  /// Display: Transformed With
  /// Definition: This document was.
  transformedWith('transformedWith'),
  elementOnly('', null),
  ;

  final String fhirCode;
  final Element? element;

  const ReportRelationshipType(this.fhirCode, [this.element]);

  Map<String, dynamic> toJson() => {
        'value': fhirCode.isEmpty ? null : fhirCode,
        if (element != null) '_value': element!.toJson(),
      };

  static ReportRelationshipType fromJson(Map<String, dynamic> json) {
    final String? value = json['value'] as String?;
    final Map<String, dynamic>? elementJson =
        json['_value'] as Map<String, dynamic>?;
    final Element? element =
        elementJson != null ? Element.fromJson(elementJson) : null;
    if (value == null && element != null) {
      return ReportRelationshipType.elementOnly.withElement(element);
    }
    return ReportRelationshipType.values.firstWhere(
      (e) => e.fhirCode == value,
    );
  }

  ReportRelationshipType withElement(Element? newElement) {
    return ReportRelationshipType.fromJson({
      'value': fhirCode,
      '_value': newElement?.toJson(),
    });
  }
}
